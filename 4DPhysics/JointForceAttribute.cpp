///////////////////////////////////////////////////////////////////////////////
//
// JointForceAttribute.cpp
//  
// 4DClass Developer
// Copyright (c) 4DClass. All rights reserved.
//
///////////////////////////////////////////////////////////////////////////////

#include "JointForceAttribute.h"

///////////////////////////////////////////////////////////////////////////////
//
// CJointForceAttribute
//
// Default construction.
//
///////////////////////////////////////////////////////////////////////////////

CJointForceAttribute::CJointForceAttribute(void)
{

}

///////////////////////////////////////////////////////////////////////////////
//
// CJointForceAttribute
//
// Default deconstruction.
//
///////////////////////////////////////////////////////////////////////////////

CJointForceAttribute::~CJointForceAttribute(void)
{

}

///////////////////////////////////////////////////////////////////////////////
//
// GetJointForce
//
///////////////////////////////////////////////////////////////////////////////
	
const C4DVector3& CJointForceAttribute::getJointForce() const
{
	//Return result.
	return force;
}

///////////////////////////////////////////////////////////////////////////////
//
// SetJointForce
//
///////////////////////////////////////////////////////////////////////////////
	
void CJointForceAttribute::setJointForce(const C4DVector3& force)
{
	//Set value.
	this->force = force;
}

///////////////////////////////////////////////////////////////////////////////
//
// GetRelativeAngle
//
///////////////////////////////////////////////////////////////////////////////
	
const C4DVector3& CJointForceAttribute::getRelativeAngle() const
{
	//Return result.
	return angle;
}

///////////////////////////////////////////////////////////////////////////////
//
// SetRelativeAngle
//
///////////////////////////////////////////////////////////////////////////////
	
void CJointForceAttribute::setRelativeAngle(const C4DVector3& angle)
{
	//Set value.
	this->angle = angle;
}

///////////////////////////////////////////////////////////////////////////////
//
// GetRelativeOmega
//
///////////////////////////////////////////////////////////////////////////////
	
const C4DVector3& CJointForceAttribute::getRelativeOmega() const
{
	//Return result.
	return omega;
}

///////////////////////////////////////////////////////////////////////////////
//
// SetRelativeOmega
//
///////////////////////////////////////////////////////////////////////////////
	
void CJointForceAttribute::setRelativeOmega(const C4DVector3& omega)
{
	//Set value.
	this->omega = omega;
}

///////////////////////////////////////////////////////////////////////////////
//
// GetRelativePosition
//
///////////////////////////////////////////////////////////////////////////////
	
const C4DVector3& CJointForceAttribute::getRelativePosition() const
{
	//Return result.
	return position;
}

///////////////////////////////////////////////////////////////////////////////
//
// SetRelativePosition
//
///////////////////////////////////////////////////////////////////////////////
	
void CJointForceAttribute::setRelativePosition(const C4DVector3& position)
{
	//Set value.
	this->position = position;
}

///////////////////////////////////////////////////////////////////////////////
//
// GetRelativeVelocity
//
///////////////////////////////////////////////////////////////////////////////
	
const C4DVector3& CJointForceAttribute::getRelativeVelocity() const
{
	//Return result.
	return velocity;
}

///////////////////////////////////////////////////////////////////////////////
//
// SetRelativeVelocity
//
///////////////////////////////////////////////////////////////////////////////
	
void CJointForceAttribute::setRelativeVelocity(const C4DVector3& velocity)
{
	//Set value.
	this->velocity = velocity;
}

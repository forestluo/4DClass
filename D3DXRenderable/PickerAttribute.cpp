///////////////////////////////////////////////////////////////////////////////
//
// PickerAttribute.h
// 
// 4DClass Developer
// Copyright (c) 4DClass. All rights reserved.
//
///////////////////////////////////////////////////////////////////////////////

#include "PickerAttribute.h"

///////////////////////////////////////////////////////////////////////////////
//
// Including
//
///////////////////////////////////////////////////////////////////////////////

#include "D3DXRenderableObject.h"

///////////////////////////////////////////////////////////////////////////////
//
// CPickerAttribute
//
// Default construction.
//
/////////////////////////////////////////////////////////////////////////////////

CPickerAttribute::CPickerAttribute(void)
{

}

///////////////////////////////////////////////////////////////////////////////
//
// CPickerAttribute
//
// Default deconstruction.
//
/////////////////////////////////////////////////////////////////////////////////

CPickerAttribute::~CPickerAttribute(void)
{

}

/////////////////////////////////////////////////////////////////////////////////
//
// GetPickedObject
//
/////////////////////////////////////////////////////////////////////////////////

CWorldObject* CPickerAttribute::getPickedObject()
{
	//Enumeration.
	CListNodeEnumeration iterator;
	//Get enumeration.
	getEnumeration(iterator);
	//Do while.
	while(iterator.hasMoreElements())
	{
		//Get object.
		CWorldObject* object = (CWorldObject *)iterator.nextElement();
#ifdef _DEBUG
		assert(object != _NULL);
#endif
		//Check result.
		if(object->isRenderableObject())
		{
			//Get renderable object.
			CD3DXRenderableObject* renderableObject =
				(CD3DXRenderableObject *)object->getRenderable();
			//Check picked.
			if(renderableObject->isPicked())
			{
				//Return result.
				return object;
			}
			else
			{
				//Get picked object.
				CWorldObject* pickedObject
					= renderableObject->getPickedObject();
				//Check result.
				if(pickedObject != _NULL) return pickedObject;
			}
		}
	}
	//Return null.
	return (CWorldObject *)_NULL;
}

///////////////////////////////////////////////////////////////////////////////
//
// Pick
//
// Default deconstruction.
//
/////////////////////////////////////////////////////////////////////////////////

_BOOL CPickerAttribute::pick(CPickRay& pickRay,CPickResult& result)
{
	//Return false.
	return _FALSE;
}

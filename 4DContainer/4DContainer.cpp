///////////////////////////////////////////////////////////////////////////////
//
// 4DContainer.cpp
//  
// 4DClass Developer
// Copyright (c) 4DClass. All rights reserved.
//
///////////////////////////////////////////////////////////////////////////////

#include "4DContainer.h"

///////////////////////////////////////////////////////////////////////////////
//
// Global
//
///////////////////////////////////////////////////////////////////////////////

const _INTEGER C4DContainer::WITHOUT_LIMIT = -1;

///////////////////////////////////////////////////////////////////////////////
//
// C4DContainer
//
///////////////////////////////////////////////////////////////////////////////

C4DContainer::C4DContainer(void)
{
	//Set size.
	this->size = 0;
	//Set count.
	this->count = 0;
	//Set capacity.
	this->capacity = WITHOUT_LIMIT;
}

///////////////////////////////////////////////////////////////////////////////
//
// C4DContainer
//
///////////////////////////////////////////////////////////////////////////////

C4DContainer::C4DContainer(_INTEGER capacity)
{
	//Set size.
	this->size = 0;
	//Set count.
	this->count = 0;
	//Set capacity.
	this->capacity = capacity < 0 ? WITHOUT_LIMIT : capacity;
}

///////////////////////////////////////////////////////////////////////////////
//
// ~C4DContainer
//
///////////////////////////////////////////////////////////////////////////////

C4DContainer::~C4DContainer(void)
{

}

///////////////////////////////////////////////////////////////////////////////
//
// SetCount
//
///////////////////////////////////////////////////////////////////////////////

void C4DContainer::setCount(_INTEGER count)
{
	//Set count.
	this->count = count;
}

///////////////////////////////////////////////////////////////////////////////
//
// IncreaseCount
//
///////////////////////////////////////////////////////////////////////////////

void C4DContainer::increaseCount() {count ++;}

///////////////////////////////////////////////////////////////////////////////
//
// IncreaseCount
//
///////////////////////////////////////////////////////////////////////////////

void C4DContainer::increaseCount(_INTEGER count) {this->count += count;}

///////////////////////////////////////////////////////////////////////////////
//
// DecreaseCount
//
///////////////////////////////////////////////////////////////////////////////

void C4DContainer::decreaseCount() {count --;}

///////////////////////////////////////////////////////////////////////////////
//
// DecreaseCount
//
///////////////////////////////////////////////////////////////////////////////

void C4DContainer::decreaseCount(_INTEGER count) {this->count -= count;}

///////////////////////////////////////////////////////////////////////////////
//
// SetSize
//
///////////////////////////////////////////////////////////////////////////////

void C4DContainer::setSize(_INTEGER size) {this->size = size;}

///////////////////////////////////////////////////////////////////////////////
//
// IncreaseSize
//
///////////////////////////////////////////////////////////////////////////////

void C4DContainer::increaseSize() {size ++;}

///////////////////////////////////////////////////////////////////////////////
//
// IncreaseSize
//
///////////////////////////////////////////////////////////////////////////////

void C4DContainer::increaseSize(_INTEGER size) {this->size += size;}

///////////////////////////////////////////////////////////////////////////////
//
// DecreaseSize
//
///////////////////////////////////////////////////////////////////////////////

void C4DContainer::decreaseSize() {size --;}

///////////////////////////////////////////////////////////////////////////////
//
// DecreaseSize
//
///////////////////////////////////////////////////////////////////////////////

void C4DContainer::decreaseSize(_INTEGER size) {this->size -= size;}

///////////////////////////////////////////////////////////////////////////////
//
// IncreaseSizeAndCount
//
///////////////////////////////////////////////////////////////////////////////

void C4DContainer::increaseSizeAndCount() {size ++;count ++;}

///////////////////////////////////////////////////////////////////////////////
//
// DecreaseSizeAndCount
//
///////////////////////////////////////////////////////////////////////////////

void C4DContainer::decreaseSizeAndCount() {size --;count --;}

///////////////////////////////////////////////////////////////////////////////
//
// GetSize
//
///////////////////////////////////////////////////////////////////////////////

_INTEGER C4DContainer::getSize() const {return size;}

///////////////////////////////////////////////////////////////////////////////
//
// GetCount
//
///////////////////////////////////////////////////////////////////////////////

_INTEGER C4DContainer::getCount() const {return count;}

///////////////////////////////////////////////////////////////////////////////
//
// GetCapacity
//
///////////////////////////////////////////////////////////////////////////////

_INTEGER C4DContainer::getCapacity() const {return capacity;}

///////////////////////////////////////////////////////////////////////////////
//
// GetCapacity
//
///////////////////////////////////////////////////////////////////////////////

void C4DContainer::setCapacity(_INTEGER capacity)
{
	//Set capacity.
	this->capacity = capacity < 0 ? WITHOUT_LIMIT : capacity;
}

///////////////////////////////////////////////////////////////////////////////
//
// GetCapacity
//
///////////////////////////////////////////////////////////////////////////////

_BOOL C4DContainer::isEmpty() const {return count <= 0;}

///////////////////////////////////////////////////////////////////////////////
//
// IsFull
//
///////////////////////////////////////////////////////////////////////////////

_BOOL C4DContainer::isFull() const {return capacity >= 0 && count >= capacity;}

///////////////////////////////////////////////////////////////////////////////
//
// clearAll
//
///////////////////////////////////////////////////////////////////////////////

void C4DContainer::clearAll() {size = 0;count = 0;}

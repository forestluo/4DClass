///////////////////////////////////////////////////////////////////////////////
//
// ListNodeContainer.cpp
//  
// 4DClass Developer
// Copyright (c) 4DClass. All rights reserved.
//
///////////////////////////////////////////////////////////////////////////////

#include "ListNodeEnumeration.h"

///////////////////////////////////////////////////////////////////////////////
//
// CListNodeEnumeration
//
///////////////////////////////////////////////////////////////////////////////

CListNodeEnumeration::CListNodeEnumeration(void)
{
	//Set default value.
	this->root = (CListNode *)_NULL;
	//Set default value.
	this->next = (CListNode *)_NULL;
}

///////////////////////////////////////////////////////////////////////////////
//
// CListNodeEnumeration
//
///////////////////////////////////////////////////////////////////////////////

CListNodeEnumeration::CListNodeEnumeration(CListNode* root)
{
#ifdef _DEBUG
	assert(root != _NULL);
#endif
	//Set default value.
	this->root = root;
	//Set default value.
	this->next = root->getNext();
}

///////////////////////////////////////////////////////////////////////////////
//
// ~CListNodeEnumeration
//
///////////////////////////////////////////////////////////////////////////////

CListNodeEnumeration::~CListNodeEnumeration(void)
{
	//Clear root.
	root = (CListNode *)_NULL;
	//Clear next.
	next = (CListNode *)_NULL;
}

///////////////////////////////////////////////////////////////////////////////
//
// SetListRoot
//
///////////////////////////////////////////////////////////////////////////////

void CListNodeEnumeration::setListRoot(CListNode* root)
{
#ifdef _DEBUG
	assert(root != _NULL);
#endif
	//Set root.
	this->root = root;
	//Set next.
	this->next = root->getNext();
}

///////////////////////////////////////////////////////////////////////////////
//
// Reset
//
///////////////////////////////////////////////////////////////////////////////

void CListNodeEnumeration::reset()
{
#ifdef _DEBUG
	assert(root != _NULL);
#endif
	//Set next.
	next = root->getNext();
}

///////////////////////////////////////////////////////////////////////////////
//
// HasMoreElements
//
///////////////////////////////////////////////////////////////////////////////

_BOOL CListNodeEnumeration::hasMoreElements()
{
	//Check next.
	return next != (CListNode *)_NULL && next != root;
}

///////////////////////////////////////////////////////////////////////////////
//
// NextNode
//
///////////////////////////////////////////////////////////////////////////////

CListNode* CListNodeEnumeration::nextNode()
{
	//Get next.
	CListNode* node = next;
#ifdef _DEBUG
	assert(node != _NULL);
#endif
	//Set next.
	next = node->getNext();
	//Return node.
	return node;
}

///////////////////////////////////////////////////////////////////////////////
//
// NextElement
//
///////////////////////////////////////////////////////////////////////////////

_OBJECT CListNodeEnumeration::nextElement()
{
	//Get next.
	CListNode* node = next;
#ifdef _DEBUG
	assert(node != _NULL);
#endif
	//Set next.
	next = node->getNext();
	//Return node.
	return node->getValue();
}
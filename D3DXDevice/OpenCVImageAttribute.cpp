///////////////////////////////////////////////////////////////////////////////
//
// OpenCVImageAttribute.cpp
// 
// 4DClass Developer
// Copyright (c) 4DClass. All rights reserved.
//
///////////////////////////////////////////////////////////////////////////////

#include "OpenCVImageAttribute.h"

///////////////////////////////////////////////////////////////////////////////
//
// Including
//
///////////////////////////////////////////////////////////////////////////////

#include "cv.h"

///////////////////////////////////////////////////////////////////////////////
//
// COpenCVImageAttribute
//
// Default construction.
//
///////////////////////////////////////////////////////////////////////////////

COpenCVImageAttribute::COpenCVImageAttribute(void)
{
	//Set default value.
	image = (IplImage *)_NULL;
}

///////////////////////////////////////////////////////////////////////////////
//
// COpenCVImageAttribute
//
// Default deconstruction.
//
///////////////////////////////////////////////////////////////////////////////

COpenCVImageAttribute::~COpenCVImageAttribute(void)
{
	//Destroy image.
	destroyImage();
}

///////////////////////////////////////////////////////////////////////////////
//
// GetWidth
//
///////////////////////////////////////////////////////////////////////////////

_INTEGER COpenCVImageAttribute::getWidth() const
{
#ifdef _DEBUG
	assert(image != _NULL);
#endif
	//Return result.
	return ((IplImage *)image)->width;
}

///////////////////////////////////////////////////////////////////////////////
//
// GetHeight
//
///////////////////////////////////////////////////////////////////////////////

_INTEGER COpenCVImageAttribute::getHeight() const
{
#ifdef _DEBUG
	assert(image != _NULL);
#endif
	//Return result.
	return ((IplImage *)image)->height;
}

///////////////////////////////////////////////////////////////////////////////
//
// GetImageBuffer
//
///////////////////////////////////////////////////////////////////////////////

_BYTE* COpenCVImageAttribute::getImageBuffer() const
{
#ifdef _DEBUG
	assert(image != _NULL);
#endif
	//Return value.
	return ((IplImage *)image)->imageData;
}

///////////////////////////////////////////////////////////////////////////////
//
// GetImageObject
//
///////////////////////////////////////////////////////////////////////////////

_OBJECT COpenCVImageAttribute::getImageObject() const
{
	//Return value.
	return (IplImage *)image;
}

///////////////////////////////////////////////////////////////////////////////
//
// DestroyImage
//
///////////////////////////////////////////////////////////////////////////////

void COpenCVImageAttribute::destroyImage()
{
	//Check image.
	if(image != _NULL)
	{
		//Release image.
		cvReleaseImage((IplImage **)&image);
		//Clear image.
		image = (IplImage *)_NULL;
	}
}

///////////////////////////////////////////////////////////////////////////////
//
// CreateImage
//
///////////////////////////////////////////////////////////////////////////////

_BOOL COpenCVImageAttribute::createImage(_INTEGER width,_INTEGER height)
{
#ifdef _DEBUG
	assert(image == _NULL);
#endif
	//Create image.
	image = cvCreateImage(cvSize(width,height),IPL_DEPTH_8U,4);
	//Return false.
	return image != _NULL ? _TRUE : _FALSE;
}

///////////////////////////////////////////////////////////////////////////////
//
// D3DXRenderable.cpp
//  
// 4DClass Developer
// Copyright (c) 4DClass. All rights reserved.
//
///////////////////////////////////////////////////////////////////////////////

#include "D3DXRenderable.h"

///////////////////////////////////////////////////////////////////////////////
//
// Global
//
///////////////////////////////////////////////////////////////////////////////

//Set base of object.
const C4DBase CD3DXRenderable::base(L"CD3DXRenderable",L"CD3DXResource");

///////////////////////////////////////////////////////////////////////////////
//
// CD3DXRenderable
//
// Default construction.
//
/////////////////////////////////////////////////////////////////////////////////

CD3DXRenderable::CD3DXRenderable(void)
{
	//Set default value.
	basicResource = _FALSE;
}

///////////////////////////////////////////////////////////////////////////////
//
// CD3DXRenderable
//
// Default deconstruction.
//
/////////////////////////////////////////////////////////////////////////////////

CD3DXRenderable::~CD3DXRenderable(void)
{

}

///////////////////////////////////////////////////////////////////////////////
//
// IsBasicResource
//
///////////////////////////////////////////////////////////////////////////////

_BOOL CD3DXRenderable::isBasicResource() const
{
	//Return result.
	return basicResource;
}

///////////////////////////////////////////////////////////////////////////////
//
// SetBasicResource
//
///////////////////////////////////////////////////////////////////////////////

void CD3DXRenderable::setBasicResource(_BOOL basicResource)
{
	//Set value.
	this->basicResource = basicResource;
}

///////////////////////////////////////////////////////////////////////////////
//
// Render
//
///////////////////////////////////////////////////////////////////////////////

HRESULT CD3DXRenderable::render(IDirect3DDevice9* pd3dDevice)
{
#ifdef _DEBUG
	assert(pd3dDevice != _NULL);
#endif
	//Return result.
	return render(pd3dDevice,getEffect());
}

///////////////////////////////////////////////////////////////////////////////
//
// HandleMessage
//
///////////////////////////////////////////////////////////////////////////////

HRESULT CD3DXRenderable::handleMessage(const D3DXEvent& d3dxEvent)
{
	//Handle message.
	CD3DXEffectAttribute::handleMessage(d3dxEvent);
	//Return result.
	return CD3DXResource::handleMessage(d3dxEvent);
}

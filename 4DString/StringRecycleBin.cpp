///////////////////////////////////////////////////////////////////////////////
//
// StringRecycleBin.cpp
//  
// 4DClass Developer
// Copyright (c) 4DClass. All rights reserved.
//
///////////////////////////////////////////////////////////////////////////////

#include "StringRecycleBin.h"
#include "NormalString.h"

///////////////////////////////////////////////////////////////////////////////
//
// Definition
//
///////////////////////////////////////////////////////////////////////////////

#define RELEASED_COUNT										1
#define MAX_STRING_COUNT									2048
#define MAX_STRING_LENGTH									2048

///////////////////////////////////////////////////////////////////////////////
//
// CStringRecycleBin
//
///////////////////////////////////////////////////////////////////////////////

CStringRecycleBin::CStringRecycleBin(void)
{
	//Set default capacity.
	setCapacity(MAX_STRING_COUNT);
}

///////////////////////////////////////////////////////////////////////////////
//
// ~CStringRecycleBin
//
///////////////////////////////////////////////////////////////////////////////

CStringRecycleBin::~CStringRecycleBin(void)
{
	//Clear all.
	clearAll();
}

///////////////////////////////////////////////////////////////////////////////
//
// NewObject
//
///////////////////////////////////////////////////////////////////////////////

_OBJECT CStringRecycleBin::newObject()
{
	//Return result.
	return new CNormalString();
}

///////////////////////////////////////////////////////////////////////////////
//
// DeleteObject
//
///////////////////////////////////////////////////////////////////////////////

void CStringRecycleBin::deleteObject(_OBJECT object)
{
#ifdef _DEBUG
	assert(object != _NULL);
#endif
	//Delete object.
	delete ((CNormalString *)object);
}

///////////////////////////////////////////////////////////////////////////////
//
// Recycle
//
///////////////////////////////////////////////////////////////////////////////

void CStringRecycleBin::recycle(_OBJECT object)
{
	//String.
	CNormalString* string = (CNormalString *)object;

#ifdef _DEBUG
	assert(object != _NULL);
#endif

	//Check length of string.
	if(string->length() <= MAX_STRING_LENGTH)
	{
		//Clear all.
		string->clearAll();
		//Recycle string.
		CRecycleBin::recycle(string);
	}
	else
	{
		//Delete string.
		delete (CNormalString *)string;
		//Increase released count.
		increaseCounter(RELEASED_COUNT);
	}
}
